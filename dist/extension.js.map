{"version":3,"sources":["webpack://icecomponentinit/./src/createFile.ts","webpack://icecomponentinit/external \"fs\"","webpack://icecomponentinit/external \"path\"","webpack://icecomponentinit/external \"util\"","webpack://icecomponentinit/external \"vscode\"","webpack://icecomponentinit/webpack/bootstrap","webpack://icecomponentinit/./src/extension.ts"],"names":["folderName","dir","promisify","readdir","i","length","mkdir","err","readFile","join","__dirname","data","fileName","split","writeFile","replace","descFileName","module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","call","context","console","log","disposable","vscode","commands","registerCommand","uri","dirPath","fsPath","genIndex","subscriptions","push"],"mappings":"ibAAA,eACA,SACA,SAWMA,EAAa,CAAC,MAAM,SAAS,OAAO,UAG1C,oBAA+BC,G,+CAER,EAAAC,UAAU,EAAAC,QAAV,CAAmBF,GAGxC,IAAI,IAAIG,EAAE,EAAEA,EAAEJ,EAAWK,OAAOD,IAC9B,EAAAE,MAAML,EAAI,IAAID,EAAWI,IAAI,SAASG,GAClC,GAAIA,EACA,MAAMA,KAMhB,EAAAC,SAAS,EAAAC,KAAKC,UAAU,gBAAgB,SAASH,EAAKI,GAGpD,IAAIC,EAASX,EAAIY,MAAM,MAAMZ,EAAIY,MAAM,MAAMR,OAAO,GACpD,GAAIE,EACA,MAAMA,EAEV,EAAAL,UAAU,EAAAY,UAAV,CAAqB,EAAAL,KAAKR,EAAI,UAAWW,EA7BrB,SA6BiDD,MAIzE,EAAAH,SAAS,EAAAC,KAAKC,UAAU,iBAAkB,SAAQ,SAASH,EAAKI,GAE5D,GAAIJ,EACA,MAAMA,EAEV,IAAIK,EAASX,EAAIY,MAAM,MAAMZ,EAAIY,MAAM,MAAMR,OAAO,GACpDM,EAAKA,EAAKI,QAAQ,gBAAgBH,GAElC,EAAAV,UAAU,EAAAY,UAAV,CAAqB,EAAAL,KAAKR,EAAI,UAAWW,EA5CxB,OA4CiDD,MAItE,EAAAH,SAAS,EAAAC,KAAKC,UAAU,aAAc,SAAS,SAASH,EAAKI,GAG3D,GAAIJ,EACA,MAAMA,EAEV,IAAIK,EAASX,EAAIY,MAAM,MAAMZ,EAAIY,MAAM,MAAMR,OAAO,GACpDM,EAAKA,EAAKI,QAAQ,gBAAgBH,GAElC,EAAAV,UAAU,EAAAY,UAAV,CAAqB,EAAAL,KAAKR,EAAI,IAAKe,aAA4BL,W,QC9DjEM,EAAOC,QAAUC,QAAQ,O,QCAzBF,EAAOC,QAAUC,QAAQ,S,QCAzBF,EAAOC,QAAUC,QAAQ,S,QCAzBF,EAAOC,QAAUC,QAAQ,YCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUI,KAAKT,EAAOC,QAASD,EAAQA,EAAOC,QAASG,GAGpEJ,EAAOC,Q,uGCnBf,eACA,SAGA,oBAAyBS,GAIxBC,QAAQC,IAAI,qEAKZ,IAAIC,EAAaC,EAAOC,SAASC,gBAAgB,qCAAsCC,IAGtF,MAAMC,EAAUD,EAAIE,OAEpB,EAAAC,SAASF,MAGVR,EAAQW,cAAcC,KAAKT,IAI5B,2B","file":"extension.js","sourcesContent":["import { readdir, writeFile ,mkdir,exists,readFile} from 'fs'\r\nimport { join } from 'path'\r\nimport { promisify } from 'util'\r\nimport * as vscode from 'vscode';\r\nconst indexFileName = 'index'\r\nconst indexFileExt = '.ts'\r\n\r\nconst prefabName = 'prefab'\r\nconst prefabExtention = '.meta'\r\n\r\nconst descFileName = 'desc'\r\nconst descFileExt = '.json'\r\n\r\nconst folderName = ['res','script','anim','prefab']\r\n\r\n\r\nexport async function genIndex(dir: string) {\r\n  // 得到目录下所有文件名集合\r\n  const result = await promisify(readdir)(dir)\r\n\r\n  // 创建 newdir 目录\r\n  for(let i=0;i<folderName.length;i++){\r\n    mkdir(dir+'/'+folderName[i], function(err) {\r\n        if (err) {\r\n            throw err;\r\n        }\r\n    });\r\n  }\r\n//   promisify(writeFile)(join(dir+'/script', indexFileName + indexFileExt), '')\r\n\r\n  readFile(join(__dirname,'prefab.meta'), function(err, data) {\r\n    // console.log(data);\r\n    // 读取文件失败/错误\r\n    let fileName=dir.split('\\\\')[dir.split('\\\\').length-1]\r\n    if (err) {\r\n        throw err;\r\n    }\r\n    promisify(writeFile)(join(dir+'/prefab', fileName + prefabExtention),data)\r\n   \r\n});\r\n\r\nreadFile(join(__dirname,'NewScript.txt'), 'utf-8',function(err, data) {\r\n    // 读取文件失败/错误\r\n    if (err) {\r\n        throw err;\r\n    }\r\n    let fileName=dir.split('\\\\')[dir.split('\\\\').length-1]\r\n    data=data.replace(/__template__/g,fileName)\r\n    // 读取文件成功\r\n    promisify(writeFile)(join(dir+'/script', fileName + indexFileExt),data)\r\n   \r\n});\r\n\r\nreadFile(join(__dirname,'desc.json'), 'utf-8', function(err, data) {\r\n  \r\n  // 读取文件失败/错误\r\n  if (err) {\r\n      throw err;\r\n  }\r\n  let fileName=dir.split('\\\\')[dir.split('\\\\').length-1]\r\n  data=data.replace(/__template__/g,fileName)\r\n  // 读取文件成功\r\n  promisify(writeFile)(join(dir+'/', descFileName + descFileExt),data)\r\n\r\n});\r\n  \r\n}","module.exports = require(\"fs\");;","module.exports = require(\"path\");;","module.exports = require(\"util\");;","module.exports = require(\"vscode\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// The module 'vscode' contains the VS Code extensibility API\n// Import the module and reference it with the alias vscode in your code below\nimport * as vscode from 'vscode';\nimport { genIndex } from './createFile';\n// this method is called when your extension is activated\n// your extension is activated the very first time the command is executed\nexport function activate(context: vscode.ExtensionContext) {\n\t\n\t// Use the console to output diagnostic information (console.log) and errors (console.error)\n\t// This line of code will only be executed once when your extension is activated\n\tconsole.log('Congratulations, your extension \"icecomponentinit\" is now active!');\n\n\t// The command has been defined in the package.json file\n\t// Now provide the implementation of the command with registerCommand\n\t// The commandId parameter must match the command field in package.json\n\tlet disposable = vscode.commands.registerCommand('icecomponentinit.InitICEComponent', (uri: vscode.Uri) => {\n\t\t// uri会给出命令执行时选择的路径\n\t\t// 如果右键点击文件夹，这里就是文件夹的路径\n\t\tconst dirPath = uri.fsPath\n\t\t// 需要实现一个生成index.ts文件的函数\n\t\tgenIndex(dirPath)\n\t  });\n\n\tcontext.subscriptions.push(disposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {}\n"],"sourceRoot":""}